# Generated by Django 5.2 on 2025-06-01 09:48

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='SudokuPuzzle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('initial_board', models.JSONField(help_text='A 9x9 grid (list of lists) representing the initial puzzle. 0 for empty cells.')),
                ('solution', models.JSONField(help_text='A 9x9 grid (list of lists) representing the solution.')),
                ('difficulty', models.CharField(choices=[('EXTREME', 'Extreme')], default='EXTREME', help_text='Difficulty category of the puzzle itself.', max_length=20)),
                ('clues', models.PositiveSmallIntegerField(default=25, help_text='Number of pre-filled cells in the puzzle.')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Sudoku Puzzle',
                'verbose_name_plural': 'Sudoku Puzzles',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='GameSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique ID for the game session/room (can be used for invites).', unique=True)),
                ('player1_current_board', models.JSONField(blank=True, help_text="Player 1's current Sudoku board state.", null=True)),
                ('player2_current_board', models.JSONField(blank=True, help_text="Player 2's current Sudoku board state.", null=True)),
                ('player1_incorrect_strikes', models.PositiveSmallIntegerField(default=0, help_text='Number of incorrect moves made by Player 1.')),
                ('player2_incorrect_strikes', models.PositiveSmallIntegerField(default=0, help_text='Number of incorrect moves made by Player 2.')),
                ('player1_correct_cells_count', models.PositiveSmallIntegerField(default=0)),
                ('player2_correct_cells_count', models.PositiveSmallIntegerField(default=0)),
                ('status', models.CharField(choices=[('WAITING', 'Waiting for Player 2'), ('ACTIVE', 'Active'), ('P1_WON', 'Player 1 Won'), ('P2_WON', 'Player 2 Won'), ('P1_STRIKES', 'Player 1 Forfeited (Max Strikes)'), ('P2_STRIKES', 'Player 2 Forfeited (Max Strikes)')], default='WAITING', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('started_at', models.DateTimeField(blank=True, help_text='Timestamp when Player 2 joins and game becomes active.', null=True)),
                ('ended_at', models.DateTimeField(blank=True, help_text='Timestamp when the game concludes.', null=True)),
                ('player1', models.ForeignKey(help_text='The user who initiated the game.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='game_sessions_as_player1', to=settings.AUTH_USER_MODEL)),
                ('player2', models.ForeignKey(blank=True, help_text='The user who joined the game.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='game_sessions_as_player2', to=settings.AUTH_USER_MODEL)),
                ('winner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sudoku_games_won', to=settings.AUTH_USER_MODEL)),
                ('sudoku_puzzle', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='game_sessions', to='games.sudokupuzzle')),
            ],
            options={
                'verbose_name': 'Game Session',
                'verbose_name_plural': 'Game Sessions',
                'ordering': ['-created_at'],
            },
        ),
    ]
